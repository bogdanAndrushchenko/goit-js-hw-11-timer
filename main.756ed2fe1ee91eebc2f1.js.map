{"version":3,"sources":["webpack:///./js/startTimer.js","webpack:///./js/myTimer.js"],"names":["timer","selector","targetDate","this","Date","daysSpan","document","querySelector","hoursSpan","minutesSpan","secondsSpan","_padZero","value","_countDowm","currentTime","_createSpanValue","showTime","setInterval","time","textContent","Math","floor","startBtn","addEventListener","setAttribute"],"mappings":"6HAIOA,EAAQ,I,WCFb,cAGG,IAFDC,EAEC,EAFDA,SACAC,EACC,EADDA,WAEAC,KAAKD,WAAa,IAAIE,KAAKF,GAC3BC,KAAKE,SAAWC,SAASC,cAAiBN,EAA1B,8BAChBE,KAAKK,UAAYF,SAASC,cAAiBN,EAA1B,+BACjBE,KAAKM,YAAcH,SAASC,cAAiBN,EAA1B,8BACnBE,KAAKO,YAAcJ,SAASC,cAAiBN,EAA1B,8B,2BAIrBU,SAAA,SAASC,GACP,OAAOA,EAAQ,GAAR,IAAiBA,EAAUA,G,EAEpCC,WAAA,WACE,IAAMC,EAAc,IAAIV,KACxBD,KAAKY,iBAAiBD,I,EAGxBE,SAAA,WAAW,WACTC,aAAY,kBAAM,EAAKJ,eAAc,M,EAGvCE,iBAAA,SAAiBD,GACf,IAAMI,EAAOf,KAAKD,WAAaY,EAC/BX,KAAKE,SAASc,YAAchB,KAAKQ,SAASS,KAAKC,MAAMH,EAAO,QAC5Df,KAAKK,UAAUW,YAAchB,KAAKQ,SAASS,KAAKC,MAAOH,EAAO,MAAR,OACtDf,KAAKM,YAAYU,YAAchB,KAAKQ,SAASS,KAAKC,MAAOH,EAAO,KAAR,MACxDf,KAAKO,YAAYS,YAAchB,KAAKQ,SAASS,KAAKC,MAAOH,EAAO,IAAe,O,KD3BpE,CAAmB,CAC/BjB,SAAU,WACVC,WAAY,aAGRoB,EAAWhB,SAASC,cAAc,6BACxCe,EAASC,iBAAiB,SAE1B,WACED,EAASE,aAAa,WAAY,IAClCxB,EAAMgB,c","file":"main.756ed2fe1ee91eebc2f1.js","sourcesContent":[" import\r\n CountdownTimer\r\n from \"./myTimer\";\r\n\r\n const timer = new CountdownTimer({\r\n   selector: \"#timer-1\",\r\n   targetDate: \"2021,1,1\",\r\n });\r\n\r\n const startBtn = document.querySelector(\"button[data-action-start]\");\r\n startBtn.addEventListener(\"click\", startTimer);\r\n\r\n function startTimer() {\r\n   startBtn.setAttribute('disabled', '')\r\n   timer.showTime();\r\n }\r\n","export default\r\nclass CountdownTimer {\r\n  constructor({\r\n    selector,\r\n    targetDate\r\n  }) {\r\n    this.targetDate = new Date(targetDate);\r\n    this.daysSpan = document.querySelector(`${selector} .value[data-value=\"days\"]`);\r\n    this.hoursSpan = document.querySelector(`${selector} .value[data-value=\"hours\"]`);\r\n    this.minutesSpan = document.querySelector(`${selector} .value[data-value=\"mins\"]`);\r\n    this.secondsSpan = document.querySelector(`${selector} .value[data-value=\"secs\"]`);\r\n\r\n  }\r\n  \r\n  _padZero(value) {\r\n    return value < 10 ? `0${value}` : value;\r\n  }\r\n  _countDowm() {\r\n    const currentTime = new Date();\r\n    this._createSpanValue(currentTime);\r\n  }\r\n\r\n  showTime() {\r\n    setInterval(() => this._countDowm(), 1000);\r\n  }\r\n\r\n  _createSpanValue(currentTime) {\r\n    const time = this.targetDate - currentTime;\r\n    this.daysSpan.textContent = this._padZero(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n    this.hoursSpan.textContent = this._padZero(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n    this.minutesSpan.textContent = this._padZero(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n    this.secondsSpan.textContent = this._padZero(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n  }\r\n}\r\n"],"sourceRoot":""}